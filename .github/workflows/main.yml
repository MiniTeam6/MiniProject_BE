name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  aws_access_key: ${{secrets.aws_access_key}}
  aws_secret_key: ${{secrets.aws_secret_key}}
  aws_s3_bucket: ${{secrets.aws_s3_bucket}}
  aws_s3_bucket_url: ${{secrets.aws_s3_bucket_url}}

jobs:
  build:
    runs-on: ubuntu-latest
<<<<<<< HEAD
    env:
      aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
      aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
      aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
=======
>>>>>>> af168b4 (도커허브 연동 재설정 테스트 필요)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

<<<<<<< HEAD
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
=======
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
<<<<<<< HEAD
<<<<<<< HEAD
        distribution: 'adopt@1.11'
<<<<<<< HEAD
>>>>>>> e1e7bc0 (자바 배포판 설정)
=======
=======
        distribution: 'openjdk@11'
>>>>>>> cb8b91c (자바 배포판 openjdk로 변경)
        java-version: 11
>>>>>>> 48aa313 (자바버전 포함)
=======
        java-version: '11'
        distribution: 'temurin'
<<<<<<< HEAD
>>>>>>> 3a7b287 (자바 배포판 다시 변경)
=======
    - name: Grant execute permission to gradlew
      run: chmod +x ./gradlew
>>>>>>> c766623 (실행권한 부여)

<<<<<<< HEAD
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
=======
    - name: Build with Gradle
<<<<<<< HEAD
      run: ./gradlew clean build --exclude-task test
>>>>>>> 7591e05 (빌드시 테스트 제외)
=======
      run: ./gradlew clean build
>>>>>>> cfa121d (asciidoctor 때문에 다시 빌드에 서 테스트 하도록 변경)

<<<<<<< HEAD
      - name: Create build/generated-snippets directory
        run: mkdir -p build/generated-snippets
=======
    - name: Run Tests
      run: ./gradlew test

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.IMAGE_NAME }}

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> a93641e (자동배포를 위한 설정 테스트1)
=======
#    - name: SSH to EC2 instance
#      uses: appleboy/ssh-action@v0.2.2
=======
#    - name: SSH to EC2 instance
#      uses: appleboy/ssh-action@v0.1.10
>>>>>>> 4dc6ccf (ec2 배포는 제거하고 테스트)
#      with:
#        host: ${{ secrets.SSH_HOST }}
#        username: ${{ secrets.SSH_USERNAME }}
#        password: ${{ secrets.SSH_PASSWORD }}
#        script: |
#          cd /home/ubuntu/myapp
#          sudo docker-compose down
#          sudo docker-compose pull
#          sudo docker-compose up -d
<<<<<<< HEAD
>>>>>>> af168b4 (도커허브 연동 재설정 테스트 필요)
=======
    - name: SSH to EC2 instance
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          cd /home/ubuntu/myapp
          sudo docker-compose down
          sudo docker-compose pull
          sudo docker-compose up -d
>>>>>>> acf64c2 (깃허브액션, 도커허브 설정파일 재설정)
=======
>>>>>>> 4dc6ccf (ec2 배포는 제거하고 테스트)

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Run Tests
        run: ./gradlew test

      - name: Configure AWS credentials and region
        run: |
          mkdir -p ~/.aws
          echo "accessKey=${aws_access_key}" >> ~/.aws/credentials
          echo "secretKey=${aws_secret_key}" >> ~/.aws/credentials
          echo "region=ap-northeast-2" >> ~/.aws/config
      

      - name: Configure AWS S3 bucket
        run: |
          echo "bucket=${aws_s3_bucket}" >> ~/.aws/credentials
